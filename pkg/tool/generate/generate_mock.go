// Code generated by MockGen. DO NOT EDIT.
// Source: generate.go

// Package generate is a generated GoMock package.
package generate

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockGenerate is a mock of Generate interface.
type MockGenerate struct {
	ctrl     *gomock.Controller
	recorder *MockGenerateMockRecorder
}

// MockGenerateMockRecorder is the mock recorder for MockGenerate.
type MockGenerateMockRecorder struct {
	mock *MockGenerate
}

// NewMockGenerate creates a new mock instance.
func NewMockGenerate(ctrl *gomock.Controller) *MockGenerate {
	mock := &MockGenerate{ctrl: ctrl}
	mock.recorder = &MockGenerateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGenerate) EXPECT() *MockGenerateMockRecorder {
	return m.recorder
}

// CurrentTime mocks base method.
func (m *MockGenerate) CurrentTime() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CurrentTime")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// CurrentTime indicates an expected call of CurrentTime.
func (mr *MockGenerateMockRecorder) CurrentTime() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CurrentTime", reflect.TypeOf((*MockGenerate)(nil).CurrentTime))
}

// UUID mocks base method.
func (m *MockGenerate) UUID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UUID")
	ret0, _ := ret[0].(string)
	return ret0
}

// UUID indicates an expected call of UUID.
func (mr *MockGenerateMockRecorder) UUID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UUID", reflect.TypeOf((*MockGenerate)(nil).UUID))
}
